// Code generated by MockGen. DO NOT EDIT.
// Source: ./todo_service.go

// Package mocks is a generated GoMock package.
package mocks

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	responses "github.com/vnoitkumar/demyst-code-kata/models/responses"
)

// MockTodoService is a mock of TodoService interface.
type MockTodoService struct {
	ctrl     *gomock.Controller
	recorder *MockTodoServiceMockRecorder
}

// MockTodoServiceMockRecorder is the mock recorder for MockTodoService.
type MockTodoServiceMockRecorder struct {
	mock *MockTodoService
}

// NewMockTodoService creates a new mock instance.
func NewMockTodoService(ctrl *gomock.Controller) *MockTodoService {
	mock := &MockTodoService{ctrl: ctrl}
	mock.recorder = &MockTodoServiceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockTodoService) EXPECT() *MockTodoServiceMockRecorder {
	return m.recorder
}

// GetTodoItem mocks base method.
func (m *MockTodoService) GetTodoItem(id int) (*responses.TodoResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetTodoItem", id)
	ret0, _ := ret[0].(*responses.TodoResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetTodoItem indicates an expected call of GetTodoItem.
func (mr *MockTodoServiceMockRecorder) GetTodoItem(id interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetTodoItem", reflect.TypeOf((*MockTodoService)(nil).GetTodoItem), id)
}
