// Code generated by MockGen. DO NOT EDIT.
// Source: ./todo_client.go

// Package mocks is a generated GoMock package.
package mocks

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	responses "github.com/vnoitkumar/demyst-code-kata/models/responses"
)

// MockTodoClient is a mock of TodoClient interface.
type MockTodoClient struct {
	ctrl     *gomock.Controller
	recorder *MockTodoClientMockRecorder
}

// MockTodoClientMockRecorder is the mock recorder for MockTodoClient.
type MockTodoClientMockRecorder struct {
	mock *MockTodoClient
}

// NewMockTodoClient creates a new mock instance.
func NewMockTodoClient(ctrl *gomock.Controller) *MockTodoClient {
	mock := &MockTodoClient{ctrl: ctrl}
	mock.recorder = &MockTodoClientMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockTodoClient) EXPECT() *MockTodoClientMockRecorder {
	return m.recorder
}

// GetTodoItem mocks base method.
func (m *MockTodoClient) GetTodoItem(id int) (*responses.TodoResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetTodoItem", id)
	ret0, _ := ret[0].(*responses.TodoResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetTodoItem indicates an expected call of GetTodoItem.
func (mr *MockTodoClientMockRecorder) GetTodoItem(id interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetTodoItem", reflect.TypeOf((*MockTodoClient)(nil).GetTodoItem), id)
}
